@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
  transition: background-color 0.5s ease, color 0.5s ease;
}
* {
  cursor: none;
}

body {
  cursor: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Ctext x='50%' y='50%' text-anchor='middle' dy='.3em' font-family='Press Start 2P' font-size='48' fill='black'%3E+%3C/text%3E%3C/svg%3E") 30 30, auto;
}
@keyframes pixelTransform {
  0% {
    text-shadow: 2px 2px 0 #ff0000, -2px -2px 0 #00ff00;
    opacity: 1;
  }
  50% {
    text-shadow: -4px -4px 0 #ff00ff, 4px 4px 0 #00ffff;
    opacity: 0.5;
  }
  100% {
    text-shadow: 0px 0px 0 #000, 0px 0px 0 #000;
    opacity: 1;
  }
}

.pixel-transform {
  animation: pixelTransform 0.6s ease;
}
:root {
  --mesh-line-color: #000 dark:#fff; /* Black lines for light mode */
  --mesh-background-color: #fff dark:#121212; /* White background for light mode */
}

.mesh-container {
  position: relative;
  width: 100%;
  height: 100vh;
  background-color: var(--mesh-background-color);
}

.mesh-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: grid;
  grid-template-columns: repeat(20, 1fr);
  grid-template-rows: repeat(20, 1fr);
  gap: 20px;
  pointer-events: none;
  background: transparent;
  background-image:
    linear-gradient(90deg, var(--mesh-line-color) 1px, transparent 1px),
    linear-gradient(180deg, var(--mesh-line-color) 1px, transparent 1px);
  background-size: 30px 30px; /* Adjust spacing */
}
@keyframes plusExpandVertical {
  0% {
    clip-path: polygon(48% 48%, 52% 48%, 52% 52%, 48% 52%);
  }
  50% {
    clip-path: polygon(48% 0%, 52% 0%, 52% 100%, 48% 100%);
  }
  100% {
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }
}

.mask-overlay {
  position: fixed;
  inset: 0;
  z-index: 9999;
  background-color: black;
  pointer-events: none;
  animation: maskFade 2.5s ease-out forwards;
}

.mask-overlay::before {
  content: '';
  position: absolute;
  inset: 0;
  background-color: white;
  animation: plusExpandVertical 2s cubic-bezier(0.85, 0, 0.15, 1) forwards;
}

:root[class~="dark"] .mask-overlay {
  background-color: white;
}

:root[class~="dark"] .mask-overlay::before {
  background-color: black;
}

@keyframes maskFade {
  0%, 90% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    visibility: hidden;
  }
}

@keyframes typeWriter {
  0% {
    clip-path: inset(0 100% 0 0);
  }
  100% {
    clip-path: inset(0 0 0 0);
  }
}

.typing-mask {
  display: inline-block;
  opacity: 0;
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards,
             fadeIn 0.1s linear 2.5s forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

.typing-delay-1 {
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) 2.7s forwards,
             fadeIn 0.1s linear 2.7s forwards;
}

.typing-delay-2 {
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) 2.9s forwards,
             fadeIn 0.1s linear 2.9s forwards;
}

.typing-delay-3 {
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) 3.1s forwards,
             fadeIn 0.1s linear 3.1s forwards;
}

.typing-delay-4 {
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) 3.3s forwards,
             fadeIn 0.1s linear 3.3s forwards;
}

.typing-delay-5 {
  animation: typeWriter 0.5s cubic-bezier(0.4, 0, 0.2, 1) 3.5s forwards,
             fadeIn 0.1s linear 3.5s forwards;
}

/* Optional blinking cursor that appears after initial mask animation */
.cursor-blink::after {
  content: '|';
  margin-left: 2px;
  opacity: 0;
  animation: blink 1s step-end 2.5s infinite;
}

@keyframes blink {
  from, to { opacity: 1; }
  50% { opacity: 0; }
}
